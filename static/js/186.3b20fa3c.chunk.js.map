{"version":3,"file":"static/js/186.3b20fa3c.chunk.js","mappings":"yNAmDA,UA7CgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KACA,GAAgCN,EAAAA,EAAAA,WAAS,GAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAmBR,OAjBAE,EAAAA,EAAAA,YAAU,WACRL,GAAa,GACb,IAAMM,EAAS,mCAAG,WAAMH,GAAN,iGAEII,EAAAA,EAAAA,IAAkBJ,GAFtB,OAERK,EAFQ,OAGdZ,EAAWY,EAAIC,SAHD,gDAKdX,EAjBU,iBAYI,yBAOdE,GAAa,GACbE,GAAY,GARE,4EAAH,sDAYfI,EAAUH,EACX,GAAE,CAACA,KAGF,gCACGN,IAAS,yBAAMA,IACfE,IAAa,wCACbE,GAA+B,IAAnBN,EAAQe,QACnB,qEAEA,wBACGf,EAAQgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,oCAAYD,MACZ,uBAAIC,MAFGF,EADE,QAUtB,C,uNChDYG,EAAW,+BACXC,EAAW,mCACXC,EAAY,uCAElB,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,qCACmBC,IAFrC,uBACGI,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BlB,GAA5B,yFACkBgB,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAZ,EADA,oBACmBa,IAFrC,uBACGI,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAA8BnB,GAA9B,yFACkBgB,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAZ,EADA,4BAC2Ba,IAF7C,uBACGI,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeb,EAAtB,+CAAO,OAAP,oBAAO,WAAiCJ,GAAjC,yFACkBgB,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,kBACAZ,EADA,4BAC2Ba,IAF7C,uBACGI,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,yFACkBL,EAAAA,EAAAA,IAAA,UAClBJ,EADkB,iCACeC,EADf,iCACgDQ,EADhD,gCADlB,uBACGJ,EADH,EACGA,KADH,kBAIEA,GAJF,kE","sources":["components/Reviews/Reviews.jsx","services/API.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { fetchMovieReviews } from 'services/API';\nimport { useParams } from 'react-router-dom';\n\nconst ERROR_MSG = 'Error happend';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async movieId => {\n      try {\n        const res = await fetchMovieReviews(movieId);\n        setReviews(res.results);\n      } catch (error) {\n        setError(ERROR_MSG);\n      } finally {\n        setIsLoading(false);\n        setIsLoaded(true);\n      }\n    };\n\n    fetchData(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {error && <div>{error}</div>}\n      {isLoading && <div>Loading...</div>}\n      {isLoaded && reviews.length === 0 ? (\n        <p>We don't have any reviews for this movie</p>\n      ) : (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <p>Author: {author}</p>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const USER_KEY = '9e4f0ad78cbe1148a9d4c0c8389afc83';\nexport const prePoster = 'https://image.tmdb.org/t/p/original/';\n\nexport async function fetchTrendingMovies() {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${USER_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchMovieId(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${USER_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${USER_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${USER_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchMovieSearch(query) {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${USER_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n}\n"],"names":["useState","reviews","setReviews","error","setError","isLoading","setIsLoading","isLoaded","setIsLoaded","movieId","useParams","useEffect","fetchData","fetchMovieReviews","res","results","length","map","id","author","content","BASE_URL","USER_KEY","prePoster","fetchTrendingMovies","axios","data","fetchMovieId","fetchMovieCast","fetchMovieSearch","query"],"sourceRoot":""}
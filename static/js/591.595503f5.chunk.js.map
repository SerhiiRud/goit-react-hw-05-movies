{"version":3,"file":"static/js/591.595503f5.chunk.js","mappings":"yQAEaA,E,OAAqBC,EAAAA,IAAH,wD,SCElBC,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAClBC,EAAkDD,EAAlDC,YAAaC,EAAqCF,EAArCE,eAAgBC,EAAqBH,EAArBG,SAAUC,EAAWJ,EAAXI,OAEzCC,EAAOC,SAASN,EAAMO,cACtBC,EAASC,KAAKC,KAA0B,GAArBV,EAAMW,cAE/B,OACE,iCACE,UAACd,EAAD,YACE,0BACE,gBACEe,IAAKV,EACLW,IAAG,UAAKC,EAAAA,IAAL,OAAiBb,GACpBc,MAAM,WAGV,4BACE,0BACGb,EADH,KACqBG,EADrB,QAGA,wCAAgBG,EAAhB,QACA,sCACA,uBAAIL,KACJ,oCACA,uBACGC,GACCA,EAAOY,OAAS,GAChBZ,EAAOa,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,eAI7C,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAG,OAAT,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAG,UAAT,2BAGJ,SAAC,KAAD,MAGL,ECED,EA1CqB,WAAO,IAAD,IACzB,GAA0BC,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOtB,EAAP,KAAcuB,EAAd,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,iBAACH,QAAD,IAACA,GAAD,UAACA,EAAUI,aAAX,aAAC,EAAiBC,YAAlB,QAA0B,KAmBrD,OAjBAC,EAAAA,EAAAA,YAAU,WACRT,GAAa,GAEb,IAAMU,EAAS,mCAAG,WAAMT,GAAN,iGAEIU,EAAAA,EAAAA,IAAaV,GAFjB,OAERW,EAFQ,OAGdhB,EAASgB,GAHK,gDAKdd,EAnBU,4DAcI,yBAOdE,GAAa,GAPC,4EAAH,sDAWfU,EAAUT,EACX,GAAE,CAACA,KAGF,iCACE,SAAC,KAAD,CAAMP,GAAIW,EAAaQ,QAASN,MAAO,CAAEC,KAAM,gBAA/C,UACE,mBAAQM,KAAK,SAAb,uBAEDf,IAAa,wCACbF,IAAS,yBAAMA,IACfxB,EAAM0C,QACL,0BACE,SAAC3C,EAAD,CAAWC,MAAOA,QAK3B,C,uNC9CY2C,EAAW,+BACXC,EAAW,mCACX9B,EAAY,uCAElB,SAAe+B,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,qCACmBC,IAFrC,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeT,EAAtB,+CAAO,OAAP,oBAAO,WAA4BV,GAA5B,yFACkBkB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAf,EADA,oBACmBgB,IAFrC,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BpB,GAA9B,yFACkBkB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAf,EADA,4BAC2BgB,IAF7C,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCrB,GAAjC,yFACkBkB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAf,EADA,4BAC2BgB,IAF7C,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,yFACkBL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCACgDO,EADhD,gCADlB,uBACGJ,EADH,EACGA,KADH,kBAIEA,GAJF,kE","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MovieCardContainer = styled.div`\n  display: flex;\n  gap: 20px;\n`;\n","import { Outlet, Link } from 'react-router-dom';\nimport { prePoster } from 'services/API';\nimport { MovieCardContainer } from './MovieCard.styled';\n\nexport const MovieCard = ({ movie }) => {\n  const { poster_path, original_title, overview, genres } = movie;\n\n  const year = parseInt(movie.release_date);\n  const rating = Math.ceil(movie.vote_average * 10);\n\n  return (\n    <>\n      <MovieCardContainer>\n        <div>\n          <img\n            alt={original_title}\n            src={`${prePoster}${poster_path}`}\n            width=\"200\"\n          />\n        </div>\n        <div>\n          <h1>\n            {original_title} ({year})\n          </h1>\n          <p>User Score: {rating}%</p>\n          <p>Owerview </p>\n          <p>{overview}</p>\n          <p>Genres </p>\n          <p>\n            {genres &&\n              genres.length > 0 &&\n              genres.map(genre => genre.name).join(', ')}\n          </p>\n        </div>\n      </MovieCardContainer>\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\">Cast</Link>\n        </li>\n        <li>\n          <Link to=\"reviews\">Reviews</Link>\n        </li>\n      </ul>\n      <Outlet />\n    </>\n  );\n};\n","import { useRef, useState, useEffect } from 'react';\nimport { Link, useParams, useLocation } from 'react-router-dom';\nimport { fetchMovieId } from 'services/API';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\n\nconst ERROR_MSG = 'Sorry, we have failed to show you this movie. Try again!';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  const backLinkHref = useRef(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    const fetchData = async movieId => {\n      try {\n        const res = await fetchMovieId(movieId);\n        setMovie(res);\n      } catch (error) {\n        setError(ERROR_MSG);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkHref.current} state={{ from: 'MovieDetails' }}>\n        <button type=\"button\">Go back</button>\n      </Link>\n      {isLoading && <div>Loading...</div>}\n      {error && <div>{error}</div>}\n      {movie.title && (\n        <div>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const USER_KEY = '9e4f0ad78cbe1148a9d4c0c8389afc83';\nexport const prePoster = 'https://image.tmdb.org/t/p/original/';\n\nexport async function fetchTrendingMovies() {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${USER_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchMovieId(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${USER_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${USER_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${USER_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchMovieSearch(query) {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${USER_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n}\n"],"names":["MovieCardContainer","styled","MovieCard","movie","poster_path","original_title","overview","genres","year","parseInt","release_date","rating","Math","ceil","vote_average","alt","src","prePoster","width","length","map","genre","name","join","to","useState","setMovie","error","setError","isLoading","setIsLoading","movieId","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","fetchData","fetchMovieId","res","current","type","title","BASE_URL","USER_KEY","fetchTrendingMovies","axios","data","fetchMovieCast","fetchMovieReviews","fetchMovieSearch","query"],"sourceRoot":""}
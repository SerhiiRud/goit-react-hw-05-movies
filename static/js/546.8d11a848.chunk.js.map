{"version":3,"file":"static/js/546.8d11a848.chunk.js","mappings":"8RAEaA,EAAWC,EAAAA,EAAAA,GAAH,6HAQRC,EAAYD,EAAAA,EAAAA,EAAH,6C,SCsCtB,EAxCa,WACX,OAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAkCJ,EAAAA,EAAAA,WAAS,GAA3C,eAAOK,EAAP,KAAkBC,EAAlB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QAkBR,OAhBAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACb,IAAMI,EAAS,mCAAG,WAAMH,GAAN,iGAEII,EAAAA,EAAAA,IAAeJ,GAFnB,OAERK,EAFQ,OAGdV,EAAQU,EAAIX,MAHE,gDAKdG,EAhBU,iBAWI,yBAOdE,GAAa,GAPC,4EAAH,sDAWfI,EAAUH,EACX,GAAE,CAACA,KAGF,gCACGF,IAAa,SAACQ,EAAA,EAAD,IACbV,IAAS,yBAAMA,KAChB,SAACN,EAAD,UACGI,EAAKa,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACR,2BACE,gBAAKC,IAAKH,EAAMI,IAAG,UAAKC,EAAAA,IAAL,OAAiBH,GAAgBI,MAAM,SAC1D,SAACvB,EAAD,UAAYiB,KACZ,uCAAeC,OAHRF,EADD,QAUjB,C,2NC7CYQ,EAAW,+BACXC,EAAW,mCACXH,EAAY,uCAElB,SAAeI,IAAtB,4CAAO,OAAP,oBAAO,sGACkBC,EAAAA,EAAAA,IAAA,UAClBH,EADkB,qCACmBC,IAFrC,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BrB,GAA5B,yFACkBmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAhB,EADA,oBACmBiB,IAFrC,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAehB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BJ,GAA9B,yFACkBmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAhB,EADA,4BAC2BiB,IAF7C,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAiCtB,GAAjC,yFACkBmB,EAAAA,EAAAA,IAAA,UAClBH,EADkB,kBACAhB,EADA,4BAC2BiB,IAF7C,uBACGG,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,yFACkBL,EAAAA,EAAAA,IAAA,UAClBH,EADkB,iCACeC,EADf,iCACgDO,EADhD,gCADlB,uBACGJ,EADH,EACGA,KADH,kBAIEA,GAJF,kE","sources":["components/Cast/cast.styled.jsx","components/Cast/Cast.jsx","services/API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const CastList = styled.ul`\n  margin-top: 20px;\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n`;\n\nexport const ActorName = styled.p`\n  font-weight: 700;\n`;\n","import { useState, useEffect } from 'react';\nimport { fetchMovieCast, prePoster } from 'services/API';\nimport { useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport { CastList, ActorName } from './cast.styled';\n\nconst ERROR_MSG = 'Error happend';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    const fetchData = async movieId => {\n      try {\n        const res = await fetchMovieCast(movieId);\n        setCast(res.cast);\n      } catch (error) {\n        setError(ERROR_MSG);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchData(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <div>{error}</div>}\n      <CastList>\n        {cast.map(({ id, name, character, profile_path }) => (\n          <li key={id}>\n            <img alt={name} src={`${prePoster}${profile_path}`} width=\"100\" />\n            <ActorName>{name}</ActorName>\n            <p>Character: {character}</p>\n          </li>\n        ))}\n      </CastList>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\nexport const BASE_URL = 'https://api.themoviedb.org/3';\nexport const USER_KEY = '9e4f0ad78cbe1148a9d4c0c8389afc83';\nexport const prePoster = 'https://image.tmdb.org/t/p/original/';\n\nexport async function fetchTrendingMovies() {\n  const { data } = await axios.get(\n    `${BASE_URL}/trending/all/day?api_key=${USER_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchMovieId(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}?api_key=${USER_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchMovieCast(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/credits?api_key=${USER_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movieId}/reviews?api_key=${USER_KEY}`\n  );\n  return data;\n}\n\nexport async function fetchMovieSearch(query) {\n  const { data } = await axios.get(\n    `${BASE_URL}/search/movie?api_key=${USER_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return data;\n}\n"],"names":["CastList","styled","ActorName","useState","cast","setCast","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","fetchData","fetchMovieCast","res","Loader","map","id","name","character","profile_path","alt","src","prePoster","width","BASE_URL","USER_KEY","fetchTrendingMovies","axios","data","fetchMovieId","fetchMovieReviews","fetchMovieSearch","query"],"sourceRoot":""}